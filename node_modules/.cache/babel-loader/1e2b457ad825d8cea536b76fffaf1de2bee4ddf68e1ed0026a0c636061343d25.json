{"ast":null,"code":"var _jsxFileName = \"/Users/ayushdhananjai/Documents/Padlet_Interview/ayush_countries_page/ayush_countries/src/components/countries/countries.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './countries.css';\nimport { useState, useEffect, useRef } from 'react';\nimport { Link } from \"react-router-dom\";\nimport region_options from '../../util/regions';\nimport Select from 'react-select';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\n// import Select from '@mui/material/Select';\nimport { FaSearch } from 'react-icons/fa';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\n/**\n * Represents all the countries - makes an API call to the countries API\n * upon loading the page\n * \n * @returns the Countries object\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countries = () => {\n  _s();\n  /*\n      States:\n          allCountries: the local representation of the countries\n          isLoaded: a boolean flag that gets set to false once the\n                    countries have loaded\n          setError: if there is an error, this will show to the screen\n  */\n  const [allCountries, setAllCountries] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [currSearchText, setCurrSearchText] = useState('');\n  const [currRegion, setCurrRegion] = useState('');\n  const selectRegionRef = useRef();\n  const [isOpen, setOpen] = useState(false);\n  const handleDropDown = () => {\n    setOpen(!isOpen);\n  };\n\n  /**\n   * Load the initial state of the data from the API\n   */\n  const retrieveAllData = async () => {\n    const response = await fetch(`https://restcountries.com/v2/all`, {\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n    if (!response.ok) {\n      setError(\"There was an error retrieving the data. Please reload the page and try again\");\n    }\n    const countries = await response.json();\n    // set the initial state in local storage\n    localStorage.setItem(\"rest_countries_initial_state\", JSON.stringify(countries));\n\n    // for (let i = 0; i < countries.length; i++) {\n    //     let currCountry = countries[i];\n    //     localStorage.setItem(currCountry.alpha3Code, currCountry.name);\n    // }\n\n    // set our state variables\n    setAllCountries(countries);\n    setIsLoaded(true);\n  };\n\n  /*\n      gets called upon loading the page\n  */\n  useEffect(() => {\n    retrieveAllData();\n  }, []);\n\n  /**\n   * The call back function that gets executed whenever the user\n   * filters countries by region.\n   * @param {} selectedRegion \n   * @returns N/A\n   */\n  const getCountriesByRegion = async selectedRegion => {\n    // If we have selected an actual region, then we make the async call\n    if (selectedRegion !== 'all') {\n      let lowerCaseRegion = selectedRegion.toLowerCase();\n      let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n      let actualInitialState = JSON.parse(initialState);\n      let filteredCountriesByRegion = [];\n\n      // loop over the initial state \n      for (let i = 0; i < actualInitialState.length; i++) {\n        let currCountry = actualInitialState[i];\n        // if we have a previous search filter and we change the region, thn we need to let the user know\n        if (currSearchText !== '') {\n          if (currCountry.region.toLowerCase() === lowerCaseRegion && currCountry.name.toLowerCase().includes(currSearchText)) {\n            filteredCountriesByRegion.push(currCountry);\n          }\n        }\n        // if the search bar is empty, then we just need to check the region\n        else {\n          if (currCountry.region.toLowerCase() === lowerCaseRegion) {\n            filteredCountriesByRegion.push(currCountry);\n          }\n        }\n      }\n      // if there is a previous search bar word that isn't a valid country,\n      // then we have to let the user know\n      if (filteredCountriesByRegion.length === 0) {\n        setError(\"Invalid search - Please try again\");\n        setIsLoaded(true);\n      }\n      // \n      else {\n        setAllCountries(filteredCountriesByRegion);\n        setError(\"\");\n        setIsLoaded(true);\n        setCurrRegion(selectedRegion);\n      }\n    }\n    // If the user selects all, then we just retrieve all the data again.\n    else {\n      // retrieveAllData();\n      setCurrRegion('');\n      let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n      let actualInitialState = JSON.parse(initialState);\n      let filteredCountriesByRegion = [];\n      if (currSearchText !== '') {\n        for (let i = 0; i < actualInitialState.length; i++) {\n          if (actualInitialState[i].name.toLowerCase().includes(currSearchText.toLowerCase())) {\n            filteredCountriesByRegion.push(actualInitialState[i]);\n          }\n        }\n        setAllCountries(filteredCountriesByRegion);\n        setError(\"\");\n      } else {\n        setAllCountries(actualInitialState);\n        setError(\"\");\n        setIsLoaded(true);\n      }\n      // window.location.reload();\n    }\n  };\n\n  /**\n   * The call back function that gets executed whenever\n   * a new character is being typed in the search bar \n   * @param searchVal the country we are searching for\n   */\n  const getCountriesBySearch = searchVal => {\n    // only if we have typed something do we execute the code\n    if (searchVal !== '') {\n      let lowerCaseSearchVal = searchVal.toLowerCase();\n      let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n      let actualInitialState = JSON.parse(initialState);\n      const filteredCountries = [];\n      for (let i = 0; i < actualInitialState.length; i++) {\n        let currCountry = actualInitialState[i];\n        if (currRegion.toLowerCase() !== 'all' && currRegion !== '') {\n          if (currCountry.region.toLowerCase() === currRegion.toLowerCase()) {\n            if (currCountry.name.toLowerCase().includes(lowerCaseSearchVal)) {\n              filteredCountries.push(currCountry);\n            }\n          }\n        } else if (currRegion.toLowerCase() === 'all' || currRegion === '') {\n          if (currCountry.name.toLowerCase().includes(lowerCaseSearchVal)) {\n            filteredCountries.push(currCountry);\n          }\n        }\n      }\n      // If we haven't found any countries, then we need to \n      // let the user know.\n      if (filteredCountries.length === 0) {\n        setError(\"Invalid search. Please try again.\");\n        setIsLoaded(true);\n      }\n      // If we have found countries, then we set the error to be empty.\n      else {\n        setError(\"\");\n        setIsLoaded(true);\n        setAllCountries(filteredCountries);\n      }\n    }\n    // if there is nothing in the search bar, then we simply retrieve the countries\n    // from local storage\n    else {\n      let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n      let actualInitialState = JSON.parse(initialState);\n      if (currRegion !== '') {\n        let filteredByCountries = [];\n        for (let i = 0; i < actualInitialState.length; i++) {\n          if (actualInitialState[i].region.toLowerCase() === currRegion.toLowerCase()) {\n            filteredByCountries.push(actualInitialState[i]);\n          }\n        }\n        setAllCountries(filteredByCountries);\n      } else {\n        setAllCountries(actualInitialState);\n      }\n    }\n  };\n\n  /**\n   * If we have an error we need to let the user know\n   */\n  if (error !== \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"global\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"flex  flex-row justify-between search_bar_and_filter flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"xxs:pt-[120px] xs:pt-[50px] sm:inline-block md:inline-block sm:w-full xs:w-full xxs:w-full md:w-[40%] z-1\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => e.preventDefault(),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"relative z-1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"absolute inset-y-0 left-0 flex items-center pl-2 dark:text-black\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fal mt-12 dark:text-black\",\n                  children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 82\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Search for a country...\",\n              onChange: e => {\n                const val = document.getElementById(\"actual_search_bar\").value;\n                setCurrSearchText(val);\n                getCountriesBySearch(val);\n              },\n              name: \"search\",\n              type: \"text\",\n              id: \"actual_search_bar\",\n              value: currSearchText,\n              class: \"h-12 w-full shadow-xl dark:bg-white dark:placeholder:text-black rounded-sm border-none search_bar_color pl-[30px]\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"z-1 xxs:w-full xs:w-full sm:w-full md:w-auto sm:inline-block md:inline-block region_filter\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            className: \"region_filter\",\n            options: region_options,\n            value: region_options.value,\n            onChange: e => {\n              let selectedRegion = e.value;\n              setCurrRegion(selectedRegion);\n              getCountriesByRegion(selectedRegion);\n            },\n            components: {\n              IndicatorSeparator: () => null\n            },\n            styles: {\n              control: (baseStyles, state) => ({\n                ...baseStyles,\n                border: 'none',\n                backgroundColor: state.isSelected ? \"hsl(209,23%,22%)\" : \"hsl(209,23%,22%)\",\n                textDecoration: state.isSelected ? \"white\" : \"black\"\n              })\n            },\n            placeholder: \"Filter by Region\",\n            ref: selectRegionRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }, this);\n  }\n  /**\n   * skeleton loading - need to let the user know that the data is\n   * on its way, so the user isn't left sitting with an empty screen\n   * wondering what is going on.\n   */else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"global flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading_msg text-3xl flex justify-center dark:text-black place-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 106\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 16\n    }, this);\n  }\n  /**\n   * If everything works correctly, then we load the countries.\n   */else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"global flex flex-col\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex  flex-row justify-between search_bar_and_filter flex-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"xxs:pt-[120px] xs:pt-[50px] sm:inline-block md:inline-block sm:w-full xs:w-full xxs:w-full md:w-[40%] z-1\",\n            children: /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: e => e.preventDefault(),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"relative z-1\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  class: \"absolute inset-y-0 left-0 flex items-center pl-2 dark:text-black\",\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fal mt-12 dark:text-black\",\n                    children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 311,\n                      columnNumber: 82\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                placeholder: \"Search for a country...\",\n                onChange: e => {\n                  const val = document.getElementById(\"actual_search_bar\").value;\n                  setCurrSearchText(val);\n                  getCountriesBySearch(val);\n                },\n                name: \"search\",\n                type: \"text\",\n                id: \"actual_search_bar\",\n                value: currSearchText,\n                class: \"h-12 w-full shadow-xl dark:bg-white dark:placeholder:text-black rounded-sm border-none search_bar_color pl-[30px]\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"z-1 xxs:w-full xs:w-full sm:w-full md:w-auto sm:inline-block md:inline-block region_filter\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleDropDown,\n                type: \"button\",\n                class: \" inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-100\",\n                id: \"menu-button\",\n                \"aria-expanded\": \"true\",\n                \"aria-haspopup\": \"true\",\n                children: [\"Options\", /*#__PURE__*/_jsxDEV(\"svg\", {\n                  class: \"-mr-1 ml-2 h-5 w-5\",\n                  xmlns: \"http://www.w3.org/2000/svg\",\n                  viewBox: \"0 0 20 20\",\n                  fill: \"currentColor\",\n                  \"aria-hidden\": \"true\",\n                  children: /*#__PURE__*/_jsxDEV(\"path\", {\n                    \"fill-rule\": \"evenodd\",\n                    d: \"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\",\n                    \"clip-rule\": \"evenodd\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 370,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 3\n            }, this), isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"absolute w-56 right-0 z-10 mt-2 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\n              role: \"menu\",\n              \"aria-orientation\": \"vertical\",\n              \"aria-labelledby\": \"menu-button\",\n              tabindex: \"-1\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"py-1\",\n                role: \"none\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"text-gray-700 block px-4 py-2 text-sm\",\n                  role: \"menuitem\",\n                  tabindex: \"-1\",\n                  id: \"menu-item-0\",\n                  children: \"Account settings\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"text-gray-700 block px-4 py-2 text-sm\",\n                  role: \"menuitem\",\n                  tabindex: \"-1\",\n                  id: \"menu-item-1\",\n                  children: \"Support\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  class: \"text-gray-700 block px-4 py-2 text-sm\",\n                  role: \"menuitem\",\n                  tabindex: \"-1\",\n                  id: \"menu-item-2\",\n                  children: \"License\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 381,\n                  columnNumber: 7\n                }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n                  method: \"POST\",\n                  action: \"#\",\n                  role: \"none\",\n                  children: /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"submit\",\n                    class: \"text-gray-700 block w-full px-4 py-2 text-left text-sm\",\n                    role: \"menuitem\",\n                    tabindex: \"-1\",\n                    id: \"menu-item-3\",\n                    children: \"Sign out\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 383,\n                    columnNumber: 9\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 7\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 13\n            }, this) : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"flex items-center justify-center max-w-full\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"grid grid-cols-1 md:grid-cols-3 sm:grid-cols-2 lg:grid-cols-4 gap-16 mt-5\",\n            children: allCountries.map((each, idx) => /*#__PURE__*/_jsxDEV(Link, {\n              to: `/specificCountry/${each.name}`,\n              style: {\n                textDecoration: 'none',\n                color: 'white'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                class: \"overflow-hidden rounded shadow-xl h-full cursor-pointer hover:scale-105 hover:z-1 duration-300 mb-8  card_body dark:bg-white\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: each.flags.png,\n                  alt: \"country_image\",\n                  class: \"w-full h-40 object-cover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"pl-4 flex flex-col\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                    class: \"font-bold mt-4 card_title dark:text-black\",\n                    children: each.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"block actual_population dark:text-black\",\n                    children: [\"Population: \", each.population.toLocaleString()]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"block actual_region dark:text-black\",\n                    children: [\"Region: \", each.region]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    class: \"block actual_capital dark:text-black\",\n                    children: [\"Capital: \", each.capital]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 408,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 404,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n_s(Countries, \"zEWnGBF9Wtkp3J7XFQy7NO6rxug=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","region_options","Select","Box","InputLabel","MenuItem","FormControl","FaSearch","Dropdown","DropdownButton","Countries","allCountries","setAllCountries","isLoaded","setIsLoaded","error","setError","currSearchText","setCurrSearchText","currRegion","setCurrRegion","selectRegionRef","isOpen","setOpen","handleDropDown","retrieveAllData","response","fetch","method","headers","Accept","ok","countries","json","localStorage","setItem","JSON","stringify","getCountriesByRegion","selectedRegion","lowerCaseRegion","toLowerCase","initialState","getItem","actualInitialState","parse","filteredCountriesByRegion","i","length","currCountry","region","name","includes","push","getCountriesBySearch","searchVal","lowerCaseSearchVal","filteredCountries","filteredByCountries","e","preventDefault","val","document","getElementById","value","IndicatorSeparator","control","baseStyles","state","border","backgroundColor","isSelected","textDecoration","map","each","idx","color","flags","png","population","toLocaleString","capital"],"sources":["/Users/ayushdhananjai/Documents/Padlet_Interview/ayush_countries_page/ayush_countries/src/components/countries/countries.jsx"],"sourcesContent":["import React from 'react';\nimport './countries.css';\nimport {useState, useEffect, useRef} from 'react';\nimport { Link } from \"react-router-dom\";\nimport region_options from '../../util/regions';\nimport Select from 'react-select';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\n// import Select from '@mui/material/Select';\nimport {FaSearch} from 'react-icons/fa';\nimport Dropdown from 'react-bootstrap/Dropdown';\nimport DropdownButton from 'react-bootstrap/DropdownButton';\n\n/**\n * Represents all the countries - makes an API call to the countries API\n * upon loading the page\n * \n * @returns the Countries object\n */\nconst Countries = () => {\n\n    /*\n        States:\n            allCountries: the local representation of the countries\n            isLoaded: a boolean flag that gets set to false once the\n                      countries have loaded\n            setError: if there is an error, this will show to the screen\n    */\n    const [allCountries, setAllCountries] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [currSearchText, setCurrSearchText] = useState('');\n    const [currRegion, setCurrRegion] = useState('');\n    const selectRegionRef = useRef();\n    const [isOpen, setOpen] = useState(false);\n\n    const handleDropDown = () => {\n        setOpen(!isOpen);\n    };\n\n\n    /**\n     * Load the initial state of the data from the API\n     */\n    const retrieveAllData = async () => {\n        const response = await fetch(`https://restcountries.com/v2/all`, {\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                },\n             });\n        if (!response.ok) {\n            setError(\"There was an error retrieving the data. Please reload the page and try again\");\n        }\n        const countries = await response.json();\n        // set the initial state in local storage\n        localStorage.setItem(\"rest_countries_initial_state\", JSON.stringify(countries));\n\n        // for (let i = 0; i < countries.length; i++) {\n        //     let currCountry = countries[i];\n        //     localStorage.setItem(currCountry.alpha3Code, currCountry.name);\n        // }\n\n        // set our state variables\n        setAllCountries(countries);\n        setIsLoaded(true);\n    }\n\n\n    /*\n        gets called upon loading the page\n    */\n    useEffect(() => {\n        retrieveAllData();\n    },[]);\n\n    /**\n     * The call back function that gets executed whenever the user\n     * filters countries by region.\n     * @param {} selectedRegion \n     * @returns N/A\n     */\n    const getCountriesByRegion = async (selectedRegion) => {\n        // If we have selected an actual region, then we make the async call\n        if (selectedRegion !== 'all') {\n\n            let lowerCaseRegion = selectedRegion.toLowerCase();\n            let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n            let actualInitialState = JSON.parse(initialState);\n            let filteredCountriesByRegion = [];\n\n            // loop over the initial state \n            for (let i = 0; i < actualInitialState.length; i++){\n                let currCountry = actualInitialState[i];\n                // if we have a previous search filter and we change the region, thn we need to let the user know\n                if (currSearchText !== '') {\n                    if (currCountry.region.toLowerCase() === lowerCaseRegion && currCountry.name.toLowerCase().includes(currSearchText)) {\n                        filteredCountriesByRegion.push(currCountry);\n                    }\n                } \n                // if the search bar is empty, then we just need to check the region\n                else {\n                    if (currCountry.region.toLowerCase() === lowerCaseRegion) {\n                        filteredCountriesByRegion.push(currCountry);\n                    }\n                }\n\n            }\n            // if there is a previous search bar word that isn't a valid country,\n            // then we have to let the user know\n            if (filteredCountriesByRegion.length === 0) {\n                setError(\"Invalid search - Please try again\");\n                setIsLoaded(true);\n            } \n            // \n            else {\n                setAllCountries(filteredCountriesByRegion);\n                setError(\"\");\n                setIsLoaded(true);\n                setCurrRegion(selectedRegion);\n            }\n\n        } \n        // If the user selects all, then we just retrieve all the data again.\n        else {\n            // retrieveAllData();\n            setCurrRegion('');\n            let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n            let actualInitialState = JSON.parse(initialState);\n            let filteredCountriesByRegion = [];\n            if (currSearchText !== '') {\n                for (let i = 0; i < actualInitialState.length; i++) {\n                    if (actualInitialState[i].name.toLowerCase().includes(currSearchText.toLowerCase())) {\n                        filteredCountriesByRegion.push(actualInitialState[i]);\n                    }\n                }\n                setAllCountries(filteredCountriesByRegion);\n                setError(\"\");\n            } else {\n                setAllCountries(actualInitialState);\n                setError(\"\");\n                setIsLoaded(true);\n            }\n            // window.location.reload();\n        }\n    }\n\n    /**\n     * The call back function that gets executed whenever\n     * a new character is being typed in the search bar \n     * @param searchVal the country we are searching for\n     */\n    const getCountriesBySearch = (searchVal) => {\n\n        // only if we have typed something do we execute the code\n        if (searchVal !== '') {\n            let lowerCaseSearchVal = searchVal.toLowerCase();\n            let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n            let actualInitialState = JSON.parse(initialState);\n            const filteredCountries = [];\n            for (let i = 0; i < actualInitialState.length; i++) {\n                let currCountry = actualInitialState[i];\n                if (currRegion.toLowerCase() !== 'all' && currRegion !== '') {\n                    if (currCountry.region.toLowerCase() === currRegion.toLowerCase()) {\n                        if (currCountry.name.toLowerCase().includes(lowerCaseSearchVal)) {\n                            filteredCountries.push(currCountry);\n                        }\n                    }\n                } else if (currRegion.toLowerCase() === 'all' || currRegion === '') {\n                    if (currCountry.name.toLowerCase().includes(lowerCaseSearchVal)) {\n                        filteredCountries.push(currCountry);\n                    }\n                }\n            }\n            // If we haven't found any countries, then we need to \n            // let the user know.\n            if (filteredCountries.length === 0) {\n                setError(\"Invalid search. Please try again.\");\n                setIsLoaded(true);\n            } \n            // If we have found countries, then we set the error to be empty.\n            else {\n                setError(\"\");\n                setIsLoaded(true);\n                setAllCountries(filteredCountries);\n            }\n        } \n        // if there is nothing in the search bar, then we simply retrieve the countries\n        // from local storage\n        else {\n            let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n            let actualInitialState = JSON.parse(initialState);\n            if (currRegion !== '') {\n                let filteredByCountries = [];\n                for (let i = 0; i < actualInitialState.length; i++) {\n                    if (actualInitialState[i].region.toLowerCase() === currRegion.toLowerCase()) {\n                        filteredByCountries.push(actualInitialState[i]);\n                    }\n                }\n                setAllCountries(filteredByCountries);\n            } else {\n                setAllCountries(actualInitialState);\n            }\n        }\n    }\n  \n    /**\n     * If we have an error we need to let the user know\n     */\n    if (error !== \"\") {\n        return (\n            <div className=\"global\">\n\n<div class=\"flex  flex-row justify-between search_bar_and_filter flex-wrap\">\n                    <div class=\"xxs:pt-[120px] xs:pt-[50px] sm:inline-block md:inline-block sm:w-full xs:w-full xxs:w-full md:w-[40%] z-1\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <div class=\"relative z-1\">\n                                <span class=\"absolute inset-y-0 left-0 flex items-center pl-2 dark:text-black\">\n                                            <i class=\"fal mt-12 dark:text-black\"><FaSearch/></i>\n                                            </span>\n\n                            </div>\n                            <input placeholder='Search for a country...' onChange={(e) => {\n                                            const val = document.getElementById(\"actual_search_bar\").value;\n                                            setCurrSearchText(val);\n                                            getCountriesBySearch(val);\n                                        }} name=\"search\" type=\"text\" id=\"actual_search_bar\" value={currSearchText} class=\"h-12 w-full shadow-xl dark:bg-white dark:placeholder:text-black rounded-sm border-none search_bar_color pl-[30px]\">\n                            \n                            </input>\n                        </form>\n                        \n\n                    </div>\n\n                    <div class=\"z-1 xxs:w-full xs:w-full sm:w-full md:w-auto sm:inline-block md:inline-block region_filter\">\n                        {/* <select className=' w-full h-12 bg-green-50' onSelect={(e) => {\n                        let selectedRegion = e.target.value;\n                        setCurrRegion(selectedRegion);\n                        getCountriesByRegion(selectedRegion);}}>\n                            <option className='h-12 bg-red-900' selected>Filter by Region</option>\n                            <option value=\"all\">\n                                All\n                            </option>\n                            <option value=\"africa\">Africa</option>\n                            <option value=\"americas\">America</option>\n                            <option value=\"asia\">Asia</option>\n                            <option value=\"europe\">Europe</option>\n                            <option value=\"oceania\">Oceania</option>\n                        </select> */}\n                        {/* <div class=\"dropdown\"> */}\n                    {/* <button class=\"btn btn-secondary dropdown-toggle dark:bg-white dark:text-black\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" >\n                        Filter by Region\n                    </button>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                        <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n                        <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n                        <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                    </ul>  */}\n                            <Select className=\"region_filter\" options={region_options} value={region_options.value} onChange={(e) => {\n                                let selectedRegion = e.value;\n                                setCurrRegion(selectedRegion);\n                                getCountriesByRegion(selectedRegion);\n                            }} components={{\n                                IndicatorSeparator: () => null\n                                }} styles={{\n                                control: (baseStyles, state) => ({\n                                    ...baseStyles,\n                                    border:'none',\n                                    backgroundColor: state.isSelected ? \"hsl(209,23%,22%)\" : \"hsl(209,23%,22%)\",\n                                    textDecoration:state.isSelected ? \"white\" : \"black\",                               \n                                }),\n                                }} placeholder=\"Filter by Region\" ref={selectRegionRef}/>\n\n                        \n                    </div>\n                </div>\n                \n\n                 </div>\n\n        )\n    } \n    /**\n     * skeleton loading - need to let the user know that the data is\n     * on its way, so the user isn't left sitting with an empty screen\n     * wondering what is going on.\n     */\n    else if (!isLoaded) {\n        return <div className=\"global flex flex-col\">\n\n            <div className=\"loading_msg text-3xl flex justify-center dark:text-black place-items-center\"><center>Loading...</center></div>\n\n        </div>\n        \n    } \n    /**\n     * If everything works correctly, then we load the countries.\n     */\n    else {\n        return (\n            <>\n            <div className=\"global flex flex-col\">\n\n                <div class=\"flex  flex-row justify-between search_bar_and_filter flex-wrap\">\n                    <div class=\"xxs:pt-[120px] xs:pt-[50px] sm:inline-block md:inline-block sm:w-full xs:w-full xxs:w-full md:w-[40%] z-1\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <div class=\"relative z-1\">\n                                <span class=\"absolute inset-y-0 left-0 flex items-center pl-2 dark:text-black\">\n                                            <i class=\"fal mt-12 dark:text-black\"><FaSearch/></i>\n                                            </span>\n\n                            </div>\n                            <input placeholder='Search for a country...' onChange={(e) => {\n                                            const val = document.getElementById(\"actual_search_bar\").value;\n                                            setCurrSearchText(val);\n                                            getCountriesBySearch(val);\n                                        }} name=\"search\" type=\"text\" id=\"actual_search_bar\" value={currSearchText} class=\"h-12 w-full shadow-xl dark:bg-white dark:placeholder:text-black rounded-sm border-none search_bar_color pl-[30px]\">\n                            \n                            </input>\n                        </form>\n                        \n\n                    </div>\n\n                    <div class=\"z-1 xxs:w-full xs:w-full sm:w-full md:w-auto sm:inline-block md:inline-block region_filter\">\n                        {/* <select className=' w-full h-12 bg-green-50' onSelect={(e) => {\n                        let selectedRegion = e.target.value;\n                        setCurrRegion(selectedRegion);\n                        getCountriesByRegion(selectedRegion);}}>\n                            <option className='h-12 bg-red-900' selected>Filter by Region</option>\n                            <option value=\"all\">\n                                All\n                            </option>\n                            <option value=\"africa\">Africa</option>\n                            <option value=\"americas\">America</option>\n                            <option value=\"asia\">Asia</option>\n                            <option value=\"europe\">Europe</option>\n                            <option value=\"oceania\">Oceania</option>\n                        </select> */}\n                        {/* <div class=\"dropdown\"> */}\n                    {/* <button class=\"btn btn-secondary dropdown-toggle dark:bg-white dark:text-black\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" >\n                        Filter by Region\n                    </button>\n                    <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\n                        <li><a class=\"dropdown-item\" href=\"#\">Action</a></li>\n                        <li><a class=\"dropdown-item\" href=\"#\">Another action</a></li>\n                        <li><a class=\"dropdown-item\" href=\"#\">Something else here</a></li>\n                    </ul>  */}\n                            {/* <Select className=\"region_filter\" options={region_options} value={region_options.value} onChange={(e) => {\n                                let selectedRegion = e.value;\n                                setCurrRegion(selectedRegion);\n                                getCountriesByRegion(selectedRegion);\n                            }} components={{\n                                IndicatorSeparator: () => null\n                                }} styles={{\n                                control: (baseStyles, state) => ({\n                                    ...baseStyles,\n                                    border:'none',\n                                    backgroundColor: state.isSelected ? \"hsl(209,23%,22%)\" : \"hsl(209,23%,22%)\",\n                                    textDecoration:state.isSelected ? \"white\" : \"black\",                               \n                                }),\n                                }} placeholder=\"Filter by Region\" ref={selectRegionRef}/> */}\n\n{/* <div class=\"relative inline-block text-left\"> */}\n  <div>\n    <button onClick={handleDropDown} type=\"button\" class=\" inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 focus:ring-offset-gray-100\" id=\"menu-button\" aria-expanded=\"true\" aria-haspopup=\"true\">\n      Options\n      <svg class=\"-mr-1 ml-2 h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n        <path fill-rule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\" clip-rule=\"evenodd\" />\n      </svg>\n    </button>\n  </div>\n\n\n{isOpen ?   <div class=\"absolute w-56 right-0 z-10 mt-2 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"menu-button\" tabindex=\"-1\">\n    <div class=\"py-1\" role=\"none\">\n      <li  class=\"text-gray-700 block px-4 py-2 text-sm\" role=\"menuitem\" tabindex=\"-1\" id=\"menu-item-0\">Account settings</li>\n      <li class=\"text-gray-700 block px-4 py-2 text-sm\" role=\"menuitem\" tabindex=\"-1\" id=\"menu-item-1\">Support</li>\n      <li class=\"text-gray-700 block px-4 py-2 text-sm\" role=\"menuitem\" tabindex=\"-1\" id=\"menu-item-2\">License</li>\n      <form method=\"POST\" action=\"#\" role=\"none\">\n        <button type=\"submit\" class=\"text-gray-700 block w-full px-4 py-2 text-left text-sm\" role=\"menuitem\" tabindex=\"-1\" id=\"menu-item-3\">Sign out</button>\n      </form>\n    </div>\n  </div> : \"\"}\n\n{/* </div> */}\n\n\n\n                        \n                    </div>\n                </div>\n                <div class=\"flex items-center justify-center max-w-full\">\n\n                    \n                    <div class=\"grid grid-cols-1 md:grid-cols-3 sm:grid-cols-2 lg:grid-cols-4 gap-16 mt-5\"> \n                        {allCountries.map((each, idx) => (\n                                <Link to={`/specificCountry/${each.name}`} style={{textDecoration:'none', color:'white'}}>\n                                    <div class=\"overflow-hidden rounded shadow-xl h-full cursor-pointer hover:scale-105 hover:z-1 duration-300 mb-8 \n                                    card_body dark:bg-white\">\n                                        <img src={each.flags.png} alt=\"country_image\" class=\"w-full h-40 object-cover\"/>\n                                        <div className='pl-4 flex flex-col'>\n                                            <h5 class=\"font-bold mt-4 card_title dark:text-black\">{each.name}</h5>\n                                            <span class=\"block actual_population dark:text-black\">Population: {each.population.toLocaleString()}</span>\n                                            <span class=\"block actual_region dark:text-black\" >Region: {each.region}</span> \n                                            <span class=\"block actual_capital dark:text-black\">Capital: {each.capital}</span>\n                                        </div>\n\n                                    </div>\n                                </Link>\n                                    \n                            \n                        ))}\n                        </div>\n                    </div>\n                \n\n                 </div>\n            </>\n        )\n    }\n}\n\nexport default Countries;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AACxB,SAAQC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAO,OAAO;AACjD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,OAAOC,MAAM,MAAM,cAAc;AACjC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,WAAW,MAAM,2BAA2B;AACnD;AACA,SAAQC,QAAQ,QAAO,gBAAgB;AACvC,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,OAAOC,cAAc,MAAM,gCAAgC;;AAE3D;AACA;AACA;AACA;AACA;AACA;AALA;AAAA;AAMA,MAAMC,SAAS,GAAG,MAAM;EAAA;EAEpB;AACJ;AACA;AACA;AACA;AACA;AACA;EACI,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,cAAc,EAAEC,iBAAiB,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAMwB,eAAe,GAAGtB,MAAM,EAAE;EAChC,MAAM,CAACuB,MAAM,EAAEC,OAAO,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEzC,MAAM2B,cAAc,GAAG,MAAM;IACzBD,OAAO,CAAC,CAACD,MAAM,CAAC;EACpB,CAAC;;EAGD;AACJ;AACA;EACI,MAAMG,eAAe,GAAG,YAAY;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kCAAiC,EAAE;MACzDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACLC,MAAM,EAAE;MACZ;IACH,CAAC,CAAC;IACP,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;MACdf,QAAQ,CAAC,8EAA8E,CAAC;IAC5F;IACA,MAAMgB,SAAS,GAAG,MAAMN,QAAQ,CAACO,IAAI,EAAE;IACvC;IACAC,YAAY,CAACC,OAAO,CAAC,8BAA8B,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,CAAC;;IAE/E;IACA;IACA;IACA;;IAEA;IACApB,eAAe,CAACoB,SAAS,CAAC;IAC1BlB,WAAW,CAAC,IAAI,CAAC;EACrB,CAAC;;EAGD;AACJ;AACA;EACIhB,SAAS,CAAC,MAAM;IACZ2B,eAAe,EAAE;EACrB,CAAC,EAAC,EAAE,CAAC;;EAEL;AACJ;AACA;AACA;AACA;AACA;EACI,MAAMa,oBAAoB,GAAG,MAAOC,cAAc,IAAK;IACnD;IACA,IAAIA,cAAc,KAAK,KAAK,EAAE;MAE1B,IAAIC,eAAe,GAAGD,cAAc,CAACE,WAAW,EAAE;MAClD,IAAIC,YAAY,GAAGR,YAAY,CAACS,OAAO,CAAC,8BAA8B,CAAC;MACvE,IAAIC,kBAAkB,GAAGR,IAAI,CAACS,KAAK,CAACH,YAAY,CAAC;MACjD,IAAII,yBAAyB,GAAG,EAAE;;MAElC;MACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,kBAAkB,CAACI,MAAM,EAAED,CAAC,EAAE,EAAC;QAC/C,IAAIE,WAAW,GAAGL,kBAAkB,CAACG,CAAC,CAAC;QACvC;QACA,IAAI9B,cAAc,KAAK,EAAE,EAAE;UACvB,IAAIgC,WAAW,CAACC,MAAM,CAACT,WAAW,EAAE,KAAKD,eAAe,IAAIS,WAAW,CAACE,IAAI,CAACV,WAAW,EAAE,CAACW,QAAQ,CAACnC,cAAc,CAAC,EAAE;YACjH6B,yBAAyB,CAACO,IAAI,CAACJ,WAAW,CAAC;UAC/C;QACJ;QACA;QAAA,KACK;UACD,IAAIA,WAAW,CAACC,MAAM,CAACT,WAAW,EAAE,KAAKD,eAAe,EAAE;YACtDM,yBAAyB,CAACO,IAAI,CAACJ,WAAW,CAAC;UAC/C;QACJ;MAEJ;MACA;MACA;MACA,IAAIH,yBAAyB,CAACE,MAAM,KAAK,CAAC,EAAE;QACxChC,QAAQ,CAAC,mCAAmC,CAAC;QAC7CF,WAAW,CAAC,IAAI,CAAC;MACrB;MACA;MAAA,KACK;QACDF,eAAe,CAACkC,yBAAyB,CAAC;QAC1C9B,QAAQ,CAAC,EAAE,CAAC;QACZF,WAAW,CAAC,IAAI,CAAC;QACjBM,aAAa,CAACmB,cAAc,CAAC;MACjC;IAEJ;IACA;IAAA,KACK;MACD;MACAnB,aAAa,CAAC,EAAE,CAAC;MACjB,IAAIsB,YAAY,GAAGR,YAAY,CAACS,OAAO,CAAC,8BAA8B,CAAC;MACvE,IAAIC,kBAAkB,GAAGR,IAAI,CAACS,KAAK,CAACH,YAAY,CAAC;MACjD,IAAII,yBAAyB,GAAG,EAAE;MAClC,IAAI7B,cAAc,KAAK,EAAE,EAAE;QACvB,KAAK,IAAI8B,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,kBAAkB,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;UAChD,IAAIH,kBAAkB,CAACG,CAAC,CAAC,CAACI,IAAI,CAACV,WAAW,EAAE,CAACW,QAAQ,CAACnC,cAAc,CAACwB,WAAW,EAAE,CAAC,EAAE;YACjFK,yBAAyB,CAACO,IAAI,CAACT,kBAAkB,CAACG,CAAC,CAAC,CAAC;UACzD;QACJ;QACAnC,eAAe,CAACkC,yBAAyB,CAAC;QAC1C9B,QAAQ,CAAC,EAAE,CAAC;MAChB,CAAC,MAAM;QACHJ,eAAe,CAACgC,kBAAkB,CAAC;QACnC5B,QAAQ,CAAC,EAAE,CAAC;QACZF,WAAW,CAAC,IAAI,CAAC;MACrB;MACA;IACJ;EACJ,CAAC;;EAED;AACJ;AACA;AACA;AACA;EACI,MAAMwC,oBAAoB,GAAIC,SAAS,IAAK;IAExC;IACA,IAAIA,SAAS,KAAK,EAAE,EAAE;MAClB,IAAIC,kBAAkB,GAAGD,SAAS,CAACd,WAAW,EAAE;MAChD,IAAIC,YAAY,GAAGR,YAAY,CAACS,OAAO,CAAC,8BAA8B,CAAC;MACvE,IAAIC,kBAAkB,GAAGR,IAAI,CAACS,KAAK,CAACH,YAAY,CAAC;MACjD,MAAMe,iBAAiB,GAAG,EAAE;MAC5B,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,kBAAkB,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QAChD,IAAIE,WAAW,GAAGL,kBAAkB,CAACG,CAAC,CAAC;QACvC,IAAI5B,UAAU,CAACsB,WAAW,EAAE,KAAK,KAAK,IAAItB,UAAU,KAAK,EAAE,EAAE;UACzD,IAAI8B,WAAW,CAACC,MAAM,CAACT,WAAW,EAAE,KAAKtB,UAAU,CAACsB,WAAW,EAAE,EAAE;YAC/D,IAAIQ,WAAW,CAACE,IAAI,CAACV,WAAW,EAAE,CAACW,QAAQ,CAACI,kBAAkB,CAAC,EAAE;cAC7DC,iBAAiB,CAACJ,IAAI,CAACJ,WAAW,CAAC;YACvC;UACJ;QACJ,CAAC,MAAM,IAAI9B,UAAU,CAACsB,WAAW,EAAE,KAAK,KAAK,IAAItB,UAAU,KAAK,EAAE,EAAE;UAChE,IAAI8B,WAAW,CAACE,IAAI,CAACV,WAAW,EAAE,CAACW,QAAQ,CAACI,kBAAkB,CAAC,EAAE;YAC7DC,iBAAiB,CAACJ,IAAI,CAACJ,WAAW,CAAC;UACvC;QACJ;MACJ;MACA;MACA;MACA,IAAIQ,iBAAiB,CAACT,MAAM,KAAK,CAAC,EAAE;QAChChC,QAAQ,CAAC,mCAAmC,CAAC;QAC7CF,WAAW,CAAC,IAAI,CAAC;MACrB;MACA;MAAA,KACK;QACDE,QAAQ,CAAC,EAAE,CAAC;QACZF,WAAW,CAAC,IAAI,CAAC;QACjBF,eAAe,CAAC6C,iBAAiB,CAAC;MACtC;IACJ;IACA;IACA;IAAA,KACK;MACD,IAAIf,YAAY,GAAGR,YAAY,CAACS,OAAO,CAAC,8BAA8B,CAAC;MACvE,IAAIC,kBAAkB,GAAGR,IAAI,CAACS,KAAK,CAACH,YAAY,CAAC;MACjD,IAAIvB,UAAU,KAAK,EAAE,EAAE;QACnB,IAAIuC,mBAAmB,GAAG,EAAE;QAC5B,KAAK,IAAIX,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,kBAAkB,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;UAChD,IAAIH,kBAAkB,CAACG,CAAC,CAAC,CAACG,MAAM,CAACT,WAAW,EAAE,KAAKtB,UAAU,CAACsB,WAAW,EAAE,EAAE;YACzEiB,mBAAmB,CAACL,IAAI,CAACT,kBAAkB,CAACG,CAAC,CAAC,CAAC;UACnD;QACJ;QACAnC,eAAe,CAAC8C,mBAAmB,CAAC;MACxC,CAAC,MAAM;QACH9C,eAAe,CAACgC,kBAAkB,CAAC;MACvC;IACJ;EACJ,CAAC;;EAED;AACJ;AACA;EACI,IAAI7B,KAAK,KAAK,EAAE,EAAE;IACd,oBACI;MAAK,SAAS,EAAC,QAAQ;MAAA,uBAEnC;QAAK,KAAK,EAAC,gEAAgE;QAAA,wBACvD;UAAK,KAAK,EAAC,2GAA2G;UAAA,uBAClH;YAAM,QAAQ,EAAG4C,CAAC,IAAKA,CAAC,CAACC,cAAc,EAAG;YAAA,wBACtC;cAAK,KAAK,EAAC,cAAc;cAAA,uBACrB;gBAAM,KAAK,EAAC,kEAAkE;gBAAA,uBAClE;kBAAG,KAAK,EAAC,2BAA2B;kBAAA,uBAAC,QAAC,QAAQ;oBAAA;oBAAA;oBAAA;kBAAA;gBAAE;kBAAA;kBAAA;kBAAA;gBAAA;cAAI;gBAAA;gBAAA;gBAAA;cAAA;YAC7C;cAAA;cAAA;cAAA;YAAA,QAEjB,eACN;cAAO,WAAW,EAAC,yBAAyB;cAAC,QAAQ,EAAGD,CAAC,IAAK;gBAC9C,MAAME,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,CAACC,KAAK;gBAC9D9C,iBAAiB,CAAC2C,GAAG,CAAC;gBACtBP,oBAAoB,CAACO,GAAG,CAAC;cAC7B,CAAE;cAAC,IAAI,EAAC,QAAQ;cAAC,IAAI,EAAC,MAAM;cAAC,EAAE,EAAC,mBAAmB;cAAC,KAAK,EAAE5C,cAAe;cAAC,KAAK,EAAC;YAAmH;cAAA;cAAA;cAAA;YAAA,QAExM;UAAA;YAAA;YAAA;YAAA;UAAA;QACL;UAAA;UAAA;UAAA;QAAA,QAGL,eAEN;UAAK,KAAK,EAAC,4FAA4F;UAAA,uBAwB/F,QAAC,MAAM;YAAC,SAAS,EAAC,eAAe;YAAC,OAAO,EAAEhB,cAAe;YAAC,KAAK,EAAEA,cAAc,CAAC+D,KAAM;YAAC,QAAQ,EAAGL,CAAC,IAAK;cACrG,IAAIpB,cAAc,GAAGoB,CAAC,CAACK,KAAK;cAC5B5C,aAAa,CAACmB,cAAc,CAAC;cAC7BD,oBAAoB,CAACC,cAAc,CAAC;YACxC,CAAE;YAAC,UAAU,EAAE;cACX0B,kBAAkB,EAAE,MAAM;YAC1B,CAAE;YAAC,MAAM,EAAE;cACXC,OAAO,EAAE,CAACC,UAAU,EAAEC,KAAK,MAAM;gBAC7B,GAAGD,UAAU;gBACbE,MAAM,EAAC,MAAM;gBACbC,eAAe,EAAEF,KAAK,CAACG,UAAU,GAAG,kBAAkB,GAAG,kBAAkB;gBAC3EC,cAAc,EAACJ,KAAK,CAACG,UAAU,GAAG,OAAO,GAAG;cAChD,CAAC;YACD,CAAE;YAAC,WAAW,EAAC,kBAAkB;YAAC,GAAG,EAAElD;UAAgB;YAAA;YAAA;YAAA;UAAA;QAAE;UAAA;UAAA;UAAA;QAAA,QAG/D;MAAA;QAAA;QAAA;QAAA;MAAA;IACJ;MAAA;MAAA;MAAA;IAAA,QAGC;EAGnB;EACA;AACJ;AACA;AACA;AACA,KAJI,KAKK,IAAI,CAACR,QAAQ,EAAE;IAChB,oBAAO;MAAK,SAAS,EAAC,sBAAsB;MAAA,uBAExC;QAAK,SAAS,EAAC,6EAA6E;QAAA,uBAAC;UAAA,UAAQ;QAAU;UAAA;UAAA;UAAA;QAAA;MAAS;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QAE5H;EAEV;EACA;AACJ;AACA,KAFI,KAGK;IACD,oBACI;MAAA,uBACA;QAAK,SAAS,EAAC,sBAAsB;QAAA,wBAEjC;UAAK,KAAK,EAAC,gEAAgE;UAAA,wBACvE;YAAK,KAAK,EAAC,2GAA2G;YAAA,uBAClH;cAAM,QAAQ,EAAG8C,CAAC,IAAKA,CAAC,CAACC,cAAc,EAAG;cAAA,wBACtC;gBAAK,KAAK,EAAC,cAAc;gBAAA,uBACrB;kBAAM,KAAK,EAAC,kEAAkE;kBAAA,uBAClE;oBAAG,KAAK,EAAC,2BAA2B;oBAAA,uBAAC,QAAC,QAAQ;sBAAA;sBAAA;sBAAA;oBAAA;kBAAE;oBAAA;oBAAA;oBAAA;kBAAA;gBAAI;kBAAA;kBAAA;kBAAA;gBAAA;cAC7C;gBAAA;gBAAA;gBAAA;cAAA,QAEjB,eACN;gBAAO,WAAW,EAAC,yBAAyB;gBAAC,QAAQ,EAAGD,CAAC,IAAK;kBAC9C,MAAME,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,mBAAmB,CAAC,CAACC,KAAK;kBAC9D9C,iBAAiB,CAAC2C,GAAG,CAAC;kBACtBP,oBAAoB,CAACO,GAAG,CAAC;gBAC7B,CAAE;gBAAC,IAAI,EAAC,QAAQ;gBAAC,IAAI,EAAC,MAAM;gBAAC,EAAE,EAAC,mBAAmB;gBAAC,KAAK,EAAE5C,cAAe;gBAAC,KAAK,EAAC;cAAmH;gBAAA;gBAAA;gBAAA;cAAA,QAExM;YAAA;cAAA;cAAA;cAAA;YAAA;UACL;YAAA;YAAA;YAAA;UAAA,QAGL,eAEN;YAAK,KAAK,EAAC,4FAA4F;YAAA,wBAwCzH;cAAA,uBACE;gBAAQ,OAAO,EAAEO,cAAe;gBAAC,IAAI,EAAC,QAAQ;gBAAC,KAAK,EAAC,2PAA2P;gBAAC,EAAE,EAAC,aAAa;gBAAC,iBAAc,MAAM;gBAAC,iBAAc,MAAM;gBAAA,WAAC,SAE1W;kBAAK,KAAK,EAAC,oBAAoB;kBAAC,KAAK,EAAC,4BAA4B;kBAAC,OAAO,EAAC,WAAW;kBAAC,IAAI,EAAC,cAAc;kBAAC,eAAY,MAAM;kBAAA,uBAC3H;oBAAM,aAAU,SAAS;oBAAC,CAAC,EAAC,qIAAqI;oBAAC,aAAU;kBAAS;oBAAA;oBAAA;oBAAA;kBAAA;gBAAG;kBAAA;kBAAA;kBAAA;gBAAA,QACpL;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACC;cAAA;cAAA;cAAA;YAAA,QACL,EAGPF,MAAM,gBAAK;cAAK,KAAK,EAAC,oIAAoI;cAAC,IAAI,EAAC,MAAM;cAAC,oBAAiB,UAAU;cAAC,mBAAgB,aAAa;cAAC,QAAQ,EAAC,IAAI;cAAA,uBAC3O;gBAAK,KAAK,EAAC,MAAM;gBAAC,IAAI,EAAC,MAAM;gBAAA,wBAC3B;kBAAK,KAAK,EAAC,uCAAuC;kBAAC,IAAI,EAAC,UAAU;kBAAC,QAAQ,EAAC,IAAI;kBAAC,EAAE,EAAC,aAAa;kBAAA,UAAC;gBAAgB;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eACvH;kBAAI,KAAK,EAAC,uCAAuC;kBAAC,IAAI,EAAC,UAAU;kBAAC,QAAQ,EAAC,IAAI;kBAAC,EAAE,EAAC,aAAa;kBAAA,UAAC;gBAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eAC7G;kBAAI,KAAK,EAAC,uCAAuC;kBAAC,IAAI,EAAC,UAAU;kBAAC,QAAQ,EAAC,IAAI;kBAAC,EAAE,EAAC,aAAa;kBAAA,UAAC;gBAAO;kBAAA;kBAAA;kBAAA;gBAAA,QAAK,eAC7G;kBAAM,MAAM,EAAC,MAAM;kBAAC,MAAM,EAAC,GAAG;kBAAC,IAAI,EAAC,MAAM;kBAAA,uBACxC;oBAAQ,IAAI,EAAC,QAAQ;oBAAC,KAAK,EAAC,wDAAwD;oBAAC,IAAI,EAAC,UAAU;oBAAC,QAAQ,EAAC,IAAI;oBAAC,EAAE,EAAC,aAAa;oBAAA,UAAC;kBAAQ;oBAAA;oBAAA;oBAAA;kBAAA;gBAAS;kBAAA;kBAAA;kBAAA;gBAAA,QAChJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YACH;cAAA;cAAA;cAAA;YAAA,QACF,GAAG,EAAE;UAAA;YAAA;YAAA;YAAA;UAAA,QAOa;QAAA;UAAA;UAAA;UAAA;QAAA,QACJ,eACN;UAAK,KAAK,EAAC,6CAA6C;UAAA,uBAGpD;YAAK,KAAK,EAAC,2EAA2E;YAAA,UACjFX,YAAY,CAAC8D,GAAG,CAAC,CAACC,IAAI,EAAEC,GAAG,kBACpB,QAAC,IAAI;cAAC,EAAE,EAAG,oBAAmBD,IAAI,CAACvB,IAAK,EAAE;cAAC,KAAK,EAAE;gBAACqB,cAAc,EAAC,MAAM;gBAAEI,KAAK,EAAC;cAAO,CAAE;cAAA,uBACrF;gBAAK,KAAK,EAAC,8HACa;gBAAA,wBACpB;kBAAK,GAAG,EAAEF,IAAI,CAACG,KAAK,CAACC,GAAI;kBAAC,GAAG,EAAC,eAAe;kBAAC,KAAK,EAAC;gBAA0B;kBAAA;kBAAA;kBAAA;gBAAA,QAAE,eAChF;kBAAK,SAAS,EAAC,oBAAoB;kBAAA,wBAC/B;oBAAI,KAAK,EAAC,2CAA2C;oBAAA,UAAEJ,IAAI,CAACvB;kBAAI;oBAAA;oBAAA;oBAAA;kBAAA,QAAM,eACtE;oBAAM,KAAK,EAAC,yCAAyC;oBAAA,WAAC,cAAY,EAACuB,IAAI,CAACK,UAAU,CAACC,cAAc,EAAE;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAQ,eAC3G;oBAAM,KAAK,EAAC,qCAAqC;oBAAA,WAAE,UAAQ,EAACN,IAAI,CAACxB,MAAM;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAQ,eAC/E;oBAAM,KAAK,EAAC,sCAAsC;oBAAA,WAAC,WAAS,EAACwB,IAAI,CAACO,OAAO;kBAAA;oBAAA;oBAAA;oBAAA;kBAAA,QAAQ;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAC/E;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAEJ;cAAA;cAAA;cAAA;YAAA,QAIjB;UAAC;YAAA;YAAA;YAAA;UAAA;QACI;UAAA;UAAA;UAAA;QAAA,QACJ;MAAA;QAAA;QAAA;QAAA;MAAA;IAGH,iBACR;EAEX;AACJ,CAAC;AAAA,GAlZKvE,SAAS;AAAA,KAATA,SAAS;AAoZf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}