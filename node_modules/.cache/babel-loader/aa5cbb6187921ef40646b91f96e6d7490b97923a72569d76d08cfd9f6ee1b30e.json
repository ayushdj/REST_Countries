{"ast":null,"code":"var _jsxFileName = \"/Users/ayushdhananjai/Documents/Padlet_Interview/ayush_countries_page/ayush_countries/src/components/countries/countries.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './countries.css';\nimport { useState, useEffect } from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n// import Container from 'react-bootstrap/Container';\nimport { Link } from \"react-router-dom\";\nimport Dropdown from 'react-bootstrap/Dropdown';\n// import Select from 'react-select';\nimport Form from 'react-bootstrap/Form';\n\n/**\n * Represents all the countries - makes an API call to the countries API\n * upon loading the page\n * \n * @returns the Countries object\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countries = () => {\n  _s();\n  /*\n      States:\n          allCountries: the local representation of the countries\n          isLoaded: a boolean flag that gets set to false once the\n                    countries have loaded\n          setError: if there is an error, this will show to the screen\n  */\n  const [allCountries, setAllCountries] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [error, setError] = useState(\"\");\n  const [searchText, setSearchText] = useState('');\n  const retrieveAllData = async () => {\n    // setIsLoaded(false);\n    const response = await fetch(`https://restcountries.com/v2/all`, {\n      //mode:'no-cors'\n      method: 'GET',\n      headers: {\n        Accept: 'application/json'\n      }\n    });\n    if (!response.ok) {\n      setError(\"error msg\");\n    }\n    const countries = await response.json();\n    setAllCountries(countries);\n    setIsLoaded(true);\n  };\n\n  /*\n      gets called upon loading the page\n  */\n  useEffect(() => {\n    retrieveAllData();\n  }, []);\n  const getCountriesByRegion = async selectedRegion => {\n    if (selectedRegion !== 'all') {\n      const response = await fetch(`https://restcountries.com/v2/region/${selectedRegion}`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n      if (!response.ok) {\n        setError(\"Uh oh! Something went wrong. Please try again\");\n        return;\n      }\n      const result = await response.json();\n      setAllCountries(result);\n      setError(\"\");\n      setIsLoaded(true);\n    } else {\n      retrieveAllData();\n    }\n  };\n  const getCountriesBySearch = async searchVal => {\n    if (searchVal !== '') {\n      const response = await fetch(`https://restcountries.com/v2/name/${searchVal}`, {\n        method: 'GET',\n        headers: {\n          Accept: 'application/json'\n        }\n      });\n      if (!response.ok) {\n        setError(\"Invalid country. Please try again\");\n        return;\n      }\n      const result = await response.json();\n      setAllCountries(result);\n      setError(\"\");\n      setIsLoaded(true);\n    }\n  };\n\n  // const options = [\n  //     { value: 'africa', label: 'Africa' },\n  //     { value: 'americas', label: 'America' },\n  //     { value: 'asia', label: 'Asia' },\n  //     { value: 'europe', label: 'Europe' },\n  //     { value: 'oceania', label: 'Oceania' }\n  //   ]\n\n  /**\n   * If we have an error we need to let the user know\n   */\n  if (error !== \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search_bar_and_filter\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_filter\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: e => e.preventDefault(),\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            value: searchText,\n            onChange: e => {\n              const val = document.getElementById(\"actual_search_bar\").value;\n              // e.preventDefault();\n              setSearchText(val);\n              getCountriesBySearch(val);\n            },\n            name: \"email\",\n            type: \"text\",\n            id: \"actual_search_bar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"region_filter\",\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => {\n            let selectedRegion = e.target.value;\n            getCountriesByRegion(selectedRegion);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            selected: true,\n            disabled: true,\n            children: \"Filter by Region\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"africa\",\n            children: \"Africa\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"americas\",\n            children: \"America\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"asia\",\n            children: \"Asia\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"europe\",\n            children: \"Europe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"oceania\",\n            children: \"Oceania\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"all\",\n            children: \"All\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this);\n  }\n  /**\n   * skeleton loading - need to let the user know that the data is\n   * on its way, so the user isn't left sitting with an empty screen\n   * wondering what is going on.\n   */else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container loading_msg\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 16\n    }, this);\n  }\n  /**\n   * If everything works correctly, then we load the countries.\n   */else {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search_bar_and_filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search_filter\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => e.preventDefault(),\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              placeholder: \"Search for a country...\",\n              value: searchText,\n              onChange: e => {\n                const val = document.getElementById(\"actual_search_bar\").value;\n                // e.preventDefault();\n                setSearchText(val);\n                getCountriesBySearch(val);\n              },\n              name: \"email\",\n              type: \"text\",\n              id: \"actual_search_bar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"region_filter\",\n          children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"success\",\n              id: \"dropdown-basic\",\n              children: \"Filter by Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                href: \"#/action-1\",\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                href: \"#/action-2\",\n                children: \"Another action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n                href: \"#/action-3\",\n                children: \"Something else\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"\",\n            onChange: e => {\n              let selectedRegion = e.target.value;\n              getCountriesByRegion(selectedRegion);\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              selected: true,\n              disabled: true,\n              children: \"Filter by Region\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"africa\",\n              children: \"Africa\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"americas\",\n              children: \"America\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"asia\",\n              children: \"Asia\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"europe\",\n              children: \"Europe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"oceania\",\n              children: \"Oceania\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"all\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countries_main_div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"actual_all_countries_block\",\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            className: \"g-4\",\n            xs: 1,\n            sm: 2,\n            md: 2,\n            lg: 3,\n            xl: 4,\n            xxl: 4,\n            children: allCountries.map((each, idx) => /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"parent_card\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: `/specificCountry/${each.name}`,\n                  style: {\n                    textDecoration: 'none'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Card, {\n                    className: \"country_card border-0 mt-2 mr-4 d-flex h-100\",\n                    children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                      variant: \"top\",\n                      src: each.flags.png,\n                      className: \"card_image\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 232,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                      className: \"card_body\",\n                      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                        className: \"card_title\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          children: each.name\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 235,\n                          columnNumber: 88\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 235,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                        className: \"card_text\",\n                        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"card_stats\",\n                          children: \"Population: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 57\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"actual_population\",\n                          children: each.population.toLocaleString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 106\n                        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 237,\n                          columnNumber: 184\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"card_stats\",\n                          children: \"Region: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"actual_region\",\n                          children: [each.region, \" \"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 101\n                        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 238,\n                          columnNumber: 154\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"card_stats\",\n                          children: \"Capital: \"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 239,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: \"actual_capital\",\n                          children: [\" \", each.capital]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 239,\n                          columnNumber: 102\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 231,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n};\n_s(Countries, \"Ogg2TChIjuK/mj851P8y4+4OHLs=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useState","useEffect","Card","Col","Row","Link","Dropdown","Form","Countries","allCountries","setAllCountries","isLoaded","setIsLoaded","error","setError","searchText","setSearchText","retrieveAllData","response","fetch","method","headers","Accept","ok","countries","json","getCountriesByRegion","selectedRegion","result","getCountriesBySearch","searchVal","e","preventDefault","val","document","getElementById","value","target","map","each","idx","name","textDecoration","flags","png","population","toLocaleString","region","capital"],"sources":["/Users/ayushdhananjai/Documents/Padlet_Interview/ayush_countries_page/ayush_countries/src/components/countries/countries.jsx"],"sourcesContent":["import React from 'react';\nimport './countries.css';\nimport {useState, useEffect} from 'react';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n// import Container from 'react-bootstrap/Container';\nimport { Link } from \"react-router-dom\";\nimport Dropdown from 'react-bootstrap/Dropdown';\n// import Select from 'react-select';\nimport Form from 'react-bootstrap/Form';\n\n\n\n\n/**\n * Represents all the countries - makes an API call to the countries API\n * upon loading the page\n * \n * @returns the Countries object\n */\nconst Countries = () => {\n\n    /*\n        States:\n            allCountries: the local representation of the countries\n            isLoaded: a boolean flag that gets set to false once the\n                      countries have loaded\n            setError: if there is an error, this will show to the screen\n    */\n    const [allCountries, setAllCountries] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [error, setError] = useState(\"\");\n    const [searchText, setSearchText] = useState('');\n\n\n    const retrieveAllData = async () => {\n        // setIsLoaded(false);\n        const response = await fetch(`https://restcountries.com/v2/all`, {\n                //mode:'no-cors'\n                method: 'GET',\n                headers: {\n                    Accept: 'application/json',\n                },\n             });\n        if (!response.ok) {\n            setError(\"error msg\");\n        }\n        const countries = await response.json();\n        setAllCountries(countries);\n        setIsLoaded(true);\n    }\n\n\n    /*\n        gets called upon loading the page\n    */\n    useEffect(() => {\n        retrieveAllData();\n    },[]);\n\n    \n    const getCountriesByRegion = async (selectedRegion) => {\n        if (selectedRegion !=='all') {\n            const response = await fetch(`https://restcountries.com/v2/region/${selectedRegion}`,{\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n            },\n        });\n            if (!response.ok) {\n                setError(\"Uh oh! Something went wrong. Please try again\");\n                return\n            }\n            const result = await response.json();\n            setAllCountries(result);\n            setError(\"\");\n            setIsLoaded(true);\n        } else {\n            retrieveAllData();\n        }\n    }\n\n    const getCountriesBySearch = async (searchVal) => {\n        if (searchVal !== '') {\n            const response = await fetch(`https://restcountries.com/v2/name/${searchVal}`,{\n            method: 'GET',\n            headers: {\n                Accept: 'application/json',\n            },});\n            if (!response.ok) {\n                setError(\"Invalid country. Please try again\");\n                return;\n            }\n            const result = await response.json();\n            setAllCountries(result);\n            setError(\"\");\n            setIsLoaded(true);\n        }\n    }\n\n    // const options = [\n    //     { value: 'africa', label: 'Africa' },\n    //     { value: 'americas', label: 'America' },\n    //     { value: 'asia', label: 'Asia' },\n    //     { value: 'europe', label: 'Europe' },\n    //     { value: 'oceania', label: 'Oceania' }\n    //   ]\n\n  \n    /**\n     * If we have an error we need to let the user know\n     */\n    if (error !== \"\") {\n        return (\n            <div className='search_bar_and_filter'>\n                <div className='search_filter'>\n                    <form onSubmit={(e) => e.preventDefault()}>\n                        <input className=\"form-control\" value={searchText} onChange={(e) => {\n                            const val = document.getElementById(\"actual_search_bar\").value;\n                            // e.preventDefault();\n                            setSearchText(val);\n                            getCountriesBySearch(val);\n                        }} name=\"email\" type=\"text\" id=\"actual_search_bar\"/>\n                    \n                    </form>\n                </div>\n                \n                \n\n                <div className=\"region_filter\">\n                    <select onChange={(e) => {\n                        let selectedRegion = e.target.value;\n                        getCountriesByRegion(selectedRegion);\n                    }}>\n                        <option selected disabled>Filter by Region</option>\n                        <option value=\"africa\">Africa</option>\n                        <option value=\"americas\">America</option>\n                        <option value=\"asia\">Asia</option>\n                        <option value=\"europe\">Europe</option>\n                        <option value=\"oceania\">Oceania</option>\n                        <option value=\"all\">All</option>\n                    </select>\n                </div>\n\n                {error}\n            </div>\n        )\n    } \n    /**\n     * skeleton loading - need to let the user know that the data is\n     * on its way, so the user isn't left sitting with an empty screen\n     * wondering what is going on.\n     */\n    else if (!isLoaded) {\n        return <div className=\"container loading_msg\">Loading...</div>\n    } \n    /**\n     * If everything works correctly, then we load the countries.\n     */\n    else {\n        return (\n            <>\n                <div className=\"search_bar_and_filter\">\n                    <div className=\"search_filter\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            {/* <div class=\"input_icons\"> */}\n                                {/* <i class=\"fa fa-envelope icon\"></i> */}\n                                <input className=\"form-control\" placeholder=\"Search for a country...\" value={searchText} onChange={(e) => {\n                                    const val = document.getElementById(\"actual_search_bar\").value;\n                                    // e.preventDefault();\n                                    setSearchText(val);\n                                    getCountriesBySearch(val);\n                                }} name=\"email\" type=\"text\" id=\"actual_search_bar\"/>\n                            {/* </div> */}\n                        </form>\n                    </div>\n\n                    <div className=\"region_filter\">\n                        {/* <Select className=\"select_regions\" options={options} value={options.value} onChange={(e) => {\n                            let selectedRegion = e.value;\n                            setRegion(selectedRegion);\n                            getCountriesByRegion(selectedRegion);\n                        }} components={{\n                            IndicatorSeparator: () => null\n                            }} styles={{\n                            control: (baseStyles, state) => ({\n                                ...baseStyles,\n                                border:'none',\n                                backgroundColor: state.isSelected ? \"hsl(209,23%,22%)\" : \"hsl(209,23%,22%)\",\n                                textDecoration:state.isSelected ? \"white\" : \"black\",\n                            //   backgroundColor:'hsl(209,23%,22%)',\n                                color:'#ffffff'\n                            }),\n                            }}/> */}\n\n                        <Dropdown>\n                            <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\">\n                                Filter by Region\n                            </Dropdown.Toggle>\n\n                            <Dropdown.Menu>\n                                <Dropdown.Item href=\"#/action-1\">Action</Dropdown.Item>\n                                <Dropdown.Item href=\"#/action-2\">Another action</Dropdown.Item>\n                                <Dropdown.Item href=\"#/action-3\">Something else</Dropdown.Item>\n                            </Dropdown.Menu>\n                        </Dropdown>\n\n                        <select className=\"\" onChange={(e) => {\n                            let selectedRegion = e.target.value;\n                            getCountriesByRegion(selectedRegion);\n                        }}>\n                            <option selected disabled>Filter by Region</option>\n                            <option value=\"africa\">Africa</option>\n                            <option value=\"americas\">America</option>\n                            <option value=\"asia\">Asia</option>\n                            <option value=\"europe\">Europe</option>\n                            <option value=\"oceania\">Oceania</option>\n                            <option value=\"all\">All</option>\n                        </select>\n                    </div>\n                </div>\n                \n                <div className=\"countries_main_div\">\n                    <div className=\"actual_all_countries_block\">\n                        <Row className=\"g-4\" xs={1} sm={2} md={2} lg={3} xl={4} xxl={4}> \n                            {allCountries.map((each, idx) => (\n                                <Col>\n                                    <div className='parent_card'>\n                                        <Link to={`/specificCountry/${each.name}`} style={{textDecoration:'none'}}>\n                                            <Card  className = \"country_card border-0 mt-2 mr-4 d-flex h-100\">\n                                                <Card.Img variant=\"top\" src={each.flags.png} className=\"card_image\"/>\n                                                \n                                                <Card.Body className=\"card_body\">\n                                                    <Card.Title className=\"card_title\"><div>{each.name}</div></Card.Title>\n                                                    <Card.Text className=\"card_text\">\n                                                        <span className='card_stats'>Population: </span> <span className=\"actual_population\">{each.population.toLocaleString()}</span> <br/>\n                                                        <span className='card_stats'>Region: </span><span className=\"actual_region\">{each.region} </span><br/>\n                                                        <span className='card_stats'>Capital: </span><span className=\"actual_capital\"> {each.capital}</span>\n                                                    </Card.Text>\n                                                </Card.Body>\n                                            </Card>\n                                        </Link>\n                                    </div>\n                                    \n                                </Col>  \n                                \n                            ))}\n                        </Row>\n                    </div>\n                    \n                </div>\n            </>\n        )\n    }\n}\n\nexport default Countries;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}