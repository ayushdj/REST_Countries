{"ast":null,"code":"var _jsxFileName = \"/Users/ayushdhananjai/Documents/Padlet_Interview/ayush_countries_page/ayush_countries/src/components/countries/countries.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './countries.css';\nimport { useState, useEffect } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { FaSearch } from 'react-icons/fa';\nimport apiFunctions from '../../api/api';\n\n/**\n * Represents all the countries - makes an API call to the countries API\n * upon loading the page\n * \n * @returns the Countries object\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Countries = () => {\n  _s();\n  /*\n      States:\n          allCountries: the local representation of the countries\n          isLoaded: a boolean flag that gets set to false once the\n                    countries have loaded\n          error: if there is an error, this will show to the screen\n          currSearchText: keeps track of what the user has searched\n          currRegion: the currently selected region\n          isOpen: boolean representing if the drop down menu is open\n          currRegionLabel: the current region label for the dropdown\n  */\n  const [allCountries, setAllCountries] = useState([]);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [regionValues, setRegionValues] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [currSearchText, setCurrSearchText] = useState('');\n  const [currRegion, setCurrRegion] = useState('');\n  const [isOpen, setOpen] = useState(false);\n  const [currRegionLabel, setCurrRegionLabel] = useState('Filter by Region');\n\n  /**\n   * event handling function to toggle the dropdown\n   */\n  const handleDropDown = () => {\n    setOpen(!isOpen);\n  };\n\n  /**\n   * Load the initial state of the data from the API\n   */\n  const retrieveAllData = async () => {\n    const response = await apiFunctions.getAllCountries();\n    // we need to validate the response\n    let return_val = apiFunctions.validateResponse(response);\n    setError(return_val);\n    if (error !== '') {\n      return;\n    }\n    const countries = await response.json();\n    // set the initial state in local storage\n    localStorage.setItem(\"rest_countries_initial_state\", JSON.stringify(countries));\n    let regionsSet = new Set();\n    let regionsArr = [];\n    for (let i = 0; i < countries.length; i++) {\n      let currentCountry = countries[i];\n      if (!regionsSet.has(currentCountry.region)) {\n        regionsArr.push({\n          value: currentCountry.region.toLowerCase(),\n          label: currentCountry.region\n        });\n        regionsSet.add(currentCountry.region);\n      }\n    }\n\n    // set our state variables\n    setAllCountries(countries);\n    setIsLoaded(true);\n    setRegionValues(regionsArr);\n  };\n\n  /*\n      gets called upon loading the page\n  */\n  useEffect(() => {\n    /**\n     * Load the initial state of the data from the API\n     */\n    const retrieveAllData = async () => {\n      const response = await apiFunctions.getAllCountries();\n      // we need to validate the response\n      let return_val = apiFunctions.validateResponse(response);\n      setError(return_val);\n      if (error !== '') {\n        return;\n      }\n      const countries = await response.json();\n      // set the initial state in local storage\n      localStorage.setItem(\"rest_countries_initial_state\", JSON.stringify(countries));\n      let regionsSet = new Set();\n      let regionsArr = [];\n      for (let i = 0; i < countries.length; i++) {\n        let currentCountry = countries[i];\n        if (!regionsSet.has(currentCountry.region)) {\n          regionsArr.push({\n            value: currentCountry.region.toLowerCase(),\n            label: currentCountry.region\n          });\n          regionsSet.add(currentCountry.region);\n        }\n      }\n\n      // set our state variables\n      setAllCountries(countries);\n      setIsLoaded(true);\n      setRegionValues(regionsArr);\n    };\n    retrieveAllData();\n  }, [error, retrieveAllData]);\n\n  /**\n   * The call back function that gets executed whenever the user\n   * filters countries by region.\n   * @param {} selectedRegion \n   * @returns N/A\n   */\n  const getCountriesByRegion = async selectedRegion => {\n    // If we have selected an actual region, then we make the async call\n    if (selectedRegion !== 'all') {\n      // access data from local storage\n      let lowerCaseRegion = selectedRegion.toLowerCase();\n      let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n      let actualInitialState = JSON.parse(initialState);\n      let filteredCountriesByRegion = [];\n\n      // loop over the initial state \n      for (let i = 0; i < actualInitialState.length; i++) {\n        let currCountry = actualInitialState[i];\n        // if we have a previous search filter and we change the region, thn we need to let the user know\n        if (currSearchText !== '') {\n          if (currCountry.region.toLowerCase() === lowerCaseRegion && currCountry.name.toLowerCase().includes(currSearchText)) {\n            filteredCountriesByRegion.push(currCountry);\n          }\n        }\n        // if the search bar is empty, then we just need to check the region\n        else {\n          if (currCountry.region.toLowerCase() === lowerCaseRegion) {\n            filteredCountriesByRegion.push(currCountry);\n          }\n        }\n      }\n      // if there is a previous search bar word that isn't a valid country,\n      // then we have to let the user know\n      if (filteredCountriesByRegion.length === 0) {\n        setError(\"Invalid search - Please try again.\");\n        setIsLoaded(true);\n      }\n      // \n      else {\n        setAllCountries(filteredCountriesByRegion);\n        setError(\"\");\n        setIsLoaded(true);\n        setCurrRegion(selectedRegion);\n      }\n    }\n    // If the user selects all, then we just retrieve all the data again.\n    else {\n      // retrieveAllData();\n      setCurrRegion('');\n      let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n      let actualInitialState = JSON.parse(initialState);\n      let filteredCountriesByRegion = [];\n      if (currSearchText !== '') {\n        for (let i = 0; i < actualInitialState.length; i++) {\n          if (actualInitialState[i].name.toLowerCase().includes(currSearchText.toLowerCase())) {\n            filteredCountriesByRegion.push(actualInitialState[i]);\n          }\n        }\n        setAllCountries(filteredCountriesByRegion);\n        setError(\"\");\n      } else {\n        setAllCountries(actualInitialState);\n        setError(\"\");\n        setIsLoaded(true);\n      }\n    }\n  };\n\n  /**\n   * The call back function that gets executed whenever\n   * a new character is being typed in the search bar \n   * @param searchVal the country we are searching for\n   */\n  const getCountriesBySearch = searchVal => {\n    // only if we have typed something do we execute the code\n    if (searchVal !== '') {\n      let lowerCaseSearchVal = searchVal.toLowerCase();\n      let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n      let actualInitialState = JSON.parse(initialState);\n      const filteredCountries = [];\n      for (let i = 0; i < actualInitialState.length; i++) {\n        let currCountry = actualInitialState[i];\n        if (currRegion.toLowerCase() !== 'all' && currRegion !== '') {\n          if (currCountry.region.toLowerCase() === currRegion.toLowerCase()) {\n            if (currCountry.name.toLowerCase().includes(lowerCaseSearchVal)) {\n              filteredCountries.push(currCountry);\n            }\n          }\n        } else if (currRegion.toLowerCase() === 'all' || currRegion === '') {\n          if (currCountry.name.toLowerCase().includes(lowerCaseSearchVal)) {\n            filteredCountries.push(currCountry);\n          }\n        }\n      }\n      // If we haven't found any countries, then we need to \n      // let the user know.\n      if (filteredCountries.length === 0) {\n        setError(\"Invalid search - Please try again.\");\n        setIsLoaded(true);\n      }\n      // If we have found countries, then we set the error to be empty.\n      else {\n        setError(\"\");\n        setIsLoaded(true);\n        setAllCountries(filteredCountries);\n      }\n    }\n    // if there is nothing in the search bar, then we simply retrieve the countries\n    // from local storage\n    else {\n      let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n      let actualInitialState = JSON.parse(initialState);\n      if (currRegion !== '') {\n        let filteredByCountries = [];\n        for (let i = 0; i < actualInitialState.length; i++) {\n          if (actualInitialState[i].region.toLowerCase() === currRegion.toLowerCase()) {\n            filteredByCountries.push(actualInitialState[i]);\n          }\n        }\n        setAllCountries(filteredByCountries);\n      } else {\n        setAllCountries(actualInitialState);\n      }\n      setError('');\n    }\n  };\n\n  /**\n   * Close the dropdown if its open and the user clicks somewhere else\n   */\n  const closeDropDown = () => {\n    if (isOpen) {\n      setOpen(!isOpen);\n    }\n  };\n\n  /**\n   * If we have an error we need to let the user know\n   */\n  if (error !== \"\") {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"countries\",\n      className: \"global flex flex-col\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex  flex-row justify-between search_bar_and_filter flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-[50px] sm:inline-block md:inline-block sm:w-full xs:w-full xxs:w-full md:w-[40%] z-1\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => e.preventDefault(),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative z-1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"absolute inset-y-0 left-0 flex items-center pl-2 dark:text-black\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fal mt-12 dark:text-black\",\n                  children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 78\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Search for a country...\",\n              onChange: e => {\n                const val = document.getElementById(\"actual_search_bar\").value;\n                setCurrSearchText(val);\n                getCountriesBySearch(val);\n              },\n              name: \"search\",\n              type: \"text\",\n              id: \"actual_search_bar\",\n              value: currSearchText,\n              className: \"h-12 w-full shadow-xl dark:bg-white dark:text-black dark:placeholder:text-black rounded-sm border-none search_bar_color pl-[30px] focus:text-white dark:focus:text-black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"z-1 xxs:w-full xs:w-full sm:w-full md:w-auto sm:inline-block md:inline-block region_filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row justify-between\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDropDown,\n              type: \"button\",\n              className: \"text-white dark:text-black inline-flex xxs:w-full xs:w-full sm:w-full md:w-44 dark:bg-white rounded-sm bg-[hsl(209,23%,22%)] px-4 py-2 text-sm font-medium  shadow-sm  focus:outline-none focus:ring-2 focus:shadow-[0_0_40px_rgba(0,0,0,0.2)]\",\n              id: \"menu-button\",\n              \"aria-expanded\": \"true\",\n              \"aria-haspopup\": \"true\",\n              children: [currRegionLabel, /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"-mr-1 xxs:ml-auto md:ml-19 h-5 w-5 float-right\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), isOpen ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"absolute xxs:mr-[5%] xxs:ml-[5%] xs:mr-[5%] xs:ml-[5%] sm:mr-[5%] sm:ml-[5%] md:mr-[5%] xxs:w-[90%] xs:w-[90%] sm:w-[90%] md:w-44 right-0 z-10 mt-2 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\n            role: \"menu\",\n            \"aria-orientation\": \"vertical\",\n            \"aria-labelledby\": \"menu-button\",\n            tabIndex: \"-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative rounded-md\",\n              role: \"none\",\n              children: regionValues.map((each, idx) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    setCurrRegionLabel(each.label);\n                    setCurrRegion(each.value);\n                    getCountriesByRegion(each.value);\n                  },\n                  className: \"dropdown_li text-white dark:bg-white dark:text-black block px-4 py-2 text-sm\",\n                  role: \"menuitem\",\n                  tabIndex: \"-1\",\n                  id: \"menu-item-0\",\n                  children: each.label\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 37\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading_msg text-3xl flex justify-center dark:text-black place-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this);\n  }\n  /**\n   * skeleton loading - need to let the user know that the data is\n   * on its way, so the user isn't left sitting with an empty screen\n   * wondering what is going on.\n   */else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"countries\",\n      className: \"global flex flex-col\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading_msg text-3xl flex justify-center dark:text-black place-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"center\", {\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 110\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 13\n    }, this);\n  }\n  /**\n   * If everything works correctly, then we load the countries.\n   */else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"countries\",\n      className: \"global flex flex-col\",\n      onClick: () => closeDropDown(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-row justify-between search_bar_and_filter flex-wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-[50px] sm:inline-block md:inline-block sm:w-full xs:w-full xxs:w-full md:w-[40%] z-1\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: e => e.preventDefault(),\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative z-1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"absolute inset-y-0 left-0 flex items-center pl-2 dark:text-black\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fal mt-12 dark:text-black\",\n                  children: /*#__PURE__*/_jsxDEV(FaSearch, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 345,\n                    columnNumber: 78\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Search for a country...\",\n              onChange: e => {\n                const val = document.getElementById(\"actual_search_bar\").value;\n                setCurrSearchText(val);\n                getCountriesBySearch(val);\n              },\n              name: \"search\",\n              type: \"text\",\n              id: \"actual_search_bar\",\n              value: currSearchText,\n              className: \"h-12 w-full shadow-xl dark:bg-white dark:text-black dark:placeholder:text-black rounded-sm border-none search_bar_color pl-[30px] focus:text-white dark:focus:text-black\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"z-1 xxs:w-full xs:w-full sm:w-full md:w-auto sm:inline-block md:inline-block region_filter\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex flex-row justify-between\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleDropDown,\n              type: \"button\",\n              className: \"text-white dark:text-black inline-flex xxs:w-full xs:w-full sm:w-full md:w-44 dark:bg-white rounded-sm bg-[hsl(209,23%,22%)] px-4 py-2 text-sm font-medium  shadow-sm  focus:outline-none focus:ring-2 focus:shadow-[0_0_40px_rgba(0,0,0,0.2)]\",\n              id: \"menu-button\",\n              \"aria-expanded\": \"true\",\n              \"aria-haspopup\": \"true\",\n              children: [currRegionLabel, /*#__PURE__*/_jsxDEV(\"svg\", {\n                className: \"-mr-1 xxs:ml-auto md:ml-19 h-5 w-5 float-right\",\n                xmlns: \"http://www.w3.org/2000/svg\",\n                viewBox: \"0 0 20 20\",\n                fill: \"currentColor\",\n                \"aria-hidden\": \"true\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  fillRule: \"evenodd\",\n                  d: \"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\",\n                  clipRule: \"evenodd\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 359,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 25\n          }, this), isOpen ? /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"absolute xxs:mr-[5%] xxs:ml-[5%] xs:mr-[5%] xs:ml-[5%] sm:mr-[5%] sm:ml-[5%] md:mr-[5%] xxs:w-[90%] xs:w-[90%] sm:w-[90%] md:w-44 right-0 z-10 mt-2 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\",\n            role: \"menu\",\n            \"aria-orientation\": \"vertical\",\n            \"aria-labelledby\": \"menu-button\",\n            tabIndex: \"-1\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"relative rounded-md\",\n              role: \"none\",\n              children: regionValues.map((each, idx) => {\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  onClick: () => {\n                    setCurrRegionLabel(each.label);\n                    setCurrRegion(each.value);\n                    getCountriesByRegion(each.value);\n                  },\n                  className: \"dropdown_li text-white dark:bg-white dark:text-black block px-4 py-2 text-sm\",\n                  role: \"menuitem\",\n                  tabIndex: \"-1\",\n                  id: \"menu-item-0\",\n                  children: each.label\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 37\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-3 sm:grid-cols-2 lg:grid-cols-4 gap-16 mt-5 justify-center\",\n        children: allCountries.map((each, idx) => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/specificCountry/${each.name}`,\n          style: {\n            textDecoration: 'none',\n            color: 'white'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"overflow-hidden rounded shadow-xl h-full cursor-pointer hover:scale-105 hover:z-1 duration-300 mb-8  card_body dark:bg-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: each.flags.png,\n              alt: \"country_image\",\n              className: \"w-full h-40 object-cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"pl-4 flex flex-col\",\n              children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                className: \"font-bold mt-4 card_title dark:text-black\",\n                children: each.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block card_stats dark:text-black\",\n                children: [\"Population: \", each.population.toLocaleString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block card_stats dark:text-black\",\n                children: [\"Region: \", each.region]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 395,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"block card_stats dark:text-black\",\n                children: [\"Capital: \", each.capital]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 29\n          }, this)\n        }, each.alpha3Code, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(Countries, \"VcR7VYwDdx+4VH5AQla2MZil2xY=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["React","useState","useEffect","Link","FaSearch","apiFunctions","Countries","allCountries","setAllCountries","isLoaded","setIsLoaded","regionValues","setRegionValues","error","setError","currSearchText","setCurrSearchText","currRegion","setCurrRegion","isOpen","setOpen","currRegionLabel","setCurrRegionLabel","handleDropDown","retrieveAllData","response","getAllCountries","return_val","validateResponse","countries","json","localStorage","setItem","JSON","stringify","regionsSet","Set","regionsArr","i","length","currentCountry","has","region","push","value","toLowerCase","label","add","getCountriesByRegion","selectedRegion","lowerCaseRegion","initialState","getItem","actualInitialState","parse","filteredCountriesByRegion","currCountry","name","includes","getCountriesBySearch","searchVal","lowerCaseSearchVal","filteredCountries","filteredByCountries","closeDropDown","e","preventDefault","val","document","getElementById","map","each","idx","textDecoration","color","flags","png","population","toLocaleString","capital","alpha3Code"],"sources":["/Users/ayushdhananjai/Documents/Padlet_Interview/ayush_countries_page/ayush_countries/src/components/countries/countries.jsx"],"sourcesContent":["import React from 'react';\nimport './countries.css';\nimport {useState, useEffect} from 'react';\nimport { Link } from \"react-router-dom\";\nimport {FaSearch} from 'react-icons/fa';\nimport apiFunctions from '../../api/api';\n\n/**\n * Represents all the countries - makes an API call to the countries API\n * upon loading the page\n * \n * @returns the Countries object\n */\nconst Countries = () => {\n\n    /*\n        States:\n            allCountries: the local representation of the countries\n            isLoaded: a boolean flag that gets set to false once the\n                      countries have loaded\n            error: if there is an error, this will show to the screen\n            currSearchText: keeps track of what the user has searched\n            currRegion: the currently selected region\n            isOpen: boolean representing if the drop down menu is open\n            currRegionLabel: the current region label for the dropdown\n    */\n    const [allCountries, setAllCountries] = useState([]);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [regionValues, setRegionValues] = useState([]);\n    const [error, setError] = useState(\"\");\n    const [currSearchText, setCurrSearchText] = useState('');\n    const [currRegion, setCurrRegion] = useState('');\n    const [isOpen, setOpen] = useState(false);\n    const [currRegionLabel, setCurrRegionLabel] = useState('Filter by Region');\n\n    /**\n     * event handling function to toggle the dropdown\n     */\n    const handleDropDown = () => {\n        setOpen(!isOpen);\n    };\n\n\n    /**\n     * Load the initial state of the data from the API\n     */\n    const retrieveAllData = async () => {\n        const response = await apiFunctions.getAllCountries();\n        // we need to validate the response\n        let return_val = apiFunctions.validateResponse(response);\n        \n        setError(return_val);\n        if (error !== '') {\n            return;\n        }\n        const countries = await response.json();\n        // set the initial state in local storage\n        localStorage.setItem(\"rest_countries_initial_state\", JSON.stringify(countries));\n\n        let regionsSet = new Set();\n        let regionsArr = [];\n        for (let i = 0; i < countries.length; i++) {\n            let currentCountry = countries[i];\n            if (!regionsSet.has(currentCountry.region)) {\n                regionsArr.push({\n                    value : currentCountry.region.toLowerCase(),\n                    label : currentCountry.region\n                })\n                regionsSet.add(currentCountry.region);\n            }\n        }\n\n        // set our state variables\n        setAllCountries(countries);\n        setIsLoaded(true);\n        setRegionValues(regionsArr);\n    }\n\n\n    /*\n        gets called upon loading the page\n    */\n    useEffect(() => {\n        /**\n         * Load the initial state of the data from the API\n         */\n        const retrieveAllData = async () => {\n            const response = await apiFunctions.getAllCountries();\n            // we need to validate the response\n            let return_val = apiFunctions.validateResponse(response);\n            \n            setError(return_val);\n            if (error !== '') {\n                return;\n            }\n            const countries = await response.json();\n            // set the initial state in local storage\n            localStorage.setItem(\"rest_countries_initial_state\", JSON.stringify(countries));\n\n            let regionsSet = new Set();\n            let regionsArr = [];\n            for (let i = 0; i < countries.length; i++) {\n                let currentCountry = countries[i];\n                if (!regionsSet.has(currentCountry.region)) {\n                    regionsArr.push({\n                        value : currentCountry.region.toLowerCase(),\n                        label : currentCountry.region\n                    })\n                    regionsSet.add(currentCountry.region);\n                }\n            }\n\n            // set our state variables\n            setAllCountries(countries);\n            setIsLoaded(true);\n            setRegionValues(regionsArr);\n        }\n        retrieveAllData();\n    },[error, retrieveAllData]);\n\n    /**\n     * The call back function that gets executed whenever the user\n     * filters countries by region.\n     * @param {} selectedRegion \n     * @returns N/A\n     */\n    const getCountriesByRegion = async (selectedRegion) => {\n        // If we have selected an actual region, then we make the async call\n        if (selectedRegion !== 'all') {\n\n            // access data from local storage\n            let lowerCaseRegion = selectedRegion.toLowerCase();\n            let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n            let actualInitialState = JSON.parse(initialState);\n            let filteredCountriesByRegion = [];\n\n            // loop over the initial state \n            for (let i = 0; i < actualInitialState.length; i++){\n                let currCountry = actualInitialState[i];\n                // if we have a previous search filter and we change the region, thn we need to let the user know\n                if (currSearchText !== '') {\n                    if (currCountry.region.toLowerCase() === lowerCaseRegion && currCountry.name.toLowerCase().includes(currSearchText)) {\n                        filteredCountriesByRegion.push(currCountry);\n                    }\n                } \n                // if the search bar is empty, then we just need to check the region\n                else {\n                    if (currCountry.region.toLowerCase() === lowerCaseRegion) {\n                        filteredCountriesByRegion.push(currCountry);\n                    }\n                }\n\n            }\n            // if there is a previous search bar word that isn't a valid country,\n            // then we have to let the user know\n            if (filteredCountriesByRegion.length === 0) {\n                setError(\"Invalid search - Please try again.\");\n                setIsLoaded(true);\n            } \n            // \n            else {\n                setAllCountries(filteredCountriesByRegion);\n                setError(\"\");\n                setIsLoaded(true);\n                setCurrRegion(selectedRegion);\n            }\n\n        } \n        // If the user selects all, then we just retrieve all the data again.\n        else {\n            // retrieveAllData();\n            setCurrRegion('');\n            let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n            let actualInitialState = JSON.parse(initialState);\n            let filteredCountriesByRegion = [];\n            if (currSearchText !== '') {\n                for (let i = 0; i < actualInitialState.length; i++) {\n                    if (actualInitialState[i].name.toLowerCase().includes(currSearchText.toLowerCase())) {\n                        filteredCountriesByRegion.push(actualInitialState[i]);\n                    }\n                }\n                setAllCountries(filteredCountriesByRegion);\n                setError(\"\");\n            } else {\n                setAllCountries(actualInitialState);\n                setError(\"\");\n                setIsLoaded(true);\n            }\n        }\n    }\n\n    /**\n     * The call back function that gets executed whenever\n     * a new character is being typed in the search bar \n     * @param searchVal the country we are searching for\n     */\n    const getCountriesBySearch = (searchVal) => {\n\n        // only if we have typed something do we execute the code\n        if (searchVal !== '') {\n            let lowerCaseSearchVal = searchVal.toLowerCase();\n            let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n            let actualInitialState = JSON.parse(initialState);\n            const filteredCountries = [];\n            for (let i = 0; i < actualInitialState.length; i++) {\n                let currCountry = actualInitialState[i];\n                if (currRegion.toLowerCase() !== 'all' && currRegion !== '') {\n                    if (currCountry.region.toLowerCase() === currRegion.toLowerCase()) {\n                        if (currCountry.name.toLowerCase().includes(lowerCaseSearchVal)) {\n                            filteredCountries.push(currCountry);\n                        }\n                    }\n                } else if (currRegion.toLowerCase() === 'all' || currRegion === '') {\n                    if (currCountry.name.toLowerCase().includes(lowerCaseSearchVal)) {\n                        filteredCountries.push(currCountry);\n                    }\n                }\n            }\n            // If we haven't found any countries, then we need to \n            // let the user know.\n            if (filteredCountries.length === 0) {\n                setError(\"Invalid search - Please try again.\");\n                setIsLoaded(true);\n            } \n            // If we have found countries, then we set the error to be empty.\n            else {\n                setError(\"\");\n                setIsLoaded(true);\n                setAllCountries(filteredCountries);\n            }\n        } \n        // if there is nothing in the search bar, then we simply retrieve the countries\n        // from local storage\n        else {\n            let initialState = localStorage.getItem(\"rest_countries_initial_state\");\n            let actualInitialState = JSON.parse(initialState);\n            if (currRegion !== '') {\n                let filteredByCountries = [];\n                for (let i = 0; i < actualInitialState.length; i++) {\n                    if (actualInitialState[i].region.toLowerCase() === currRegion.toLowerCase()) {\n                        filteredByCountries.push(actualInitialState[i]);\n                    }\n                }\n                setAllCountries(filteredByCountries);\n            } else {\n                setAllCountries(actualInitialState);\n            }\n            setError('');\n            \n        }\n    }\n\n    /**\n     * Close the dropdown if its open and the user clicks somewhere else\n     */\n    const closeDropDown = () => {\n        if (isOpen) {\n            setOpen(!isOpen);\n        }\n    }\n  \n    /**\n     * If we have an error we need to let the user know\n     */\n    if (error !== \"\") {\n        return (\n            <div data-testid='countries' className=\"global flex flex-col\">\n                <div className=\"flex  flex-row justify-between search_bar_and_filter flex-wrap\">\n                    <div className=\"pt-[50px] sm:inline-block md:inline-block sm:w-full xs:w-full xxs:w-full md:w-[40%] z-1\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <div className=\"relative z-1\">\n                                <span className=\"absolute inset-y-0 left-0 flex items-center pl-2 dark:text-black\">\n                                    <i className=\"fal mt-12 dark:text-black\"><FaSearch/></i>\n                                </span>\n                            </div>\n                            <input placeholder='Search for a country...' onChange={(e) => {\n                                    const val = document.getElementById(\"actual_search_bar\").value;\n                                    setCurrSearchText(val);\n                                    getCountriesBySearch(val);\n                                }} name=\"search\" type=\"text\" id=\"actual_search_bar\" value={currSearchText} className=\"h-12 w-full shadow-xl dark:bg-white dark:text-black dark:placeholder:text-black rounded-sm border-none search_bar_color pl-[30px] focus:text-white dark:focus:text-black\">\n                            </input>\n                        </form>\n                    </div>\n\n                    <div className=\"z-1 xxs:w-full xs:w-full sm:w-full md:w-auto sm:inline-block md:inline-block region_filter\">\n                        <div className=\"flex flex-row justify-between\">\n                            <button onClick={handleDropDown} type=\"button\" className=\"text-white dark:text-black inline-flex xxs:w-full xs:w-full sm:w-full md:w-44 dark:bg-white rounded-sm bg-[hsl(209,23%,22%)] px-4 py-2 text-sm font-medium  shadow-sm  focus:outline-none focus:ring-2 focus:shadow-[0_0_40px_rgba(0,0,0,0.2)]\" id=\"menu-button\" aria-expanded=\"true\" aria-haspopup=\"true\">\n                                {currRegionLabel}\n                                <svg className=\"-mr-1 xxs:ml-auto md:ml-19 h-5 w-5 float-right\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                    <path fillRule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\" clipRule=\"evenodd\" />\n                                </svg>\n                            </button>\n                        </div>\n\n\n                        {isOpen ?   <div className=\"absolute xxs:mr-[5%] xxs:ml-[5%] xs:mr-[5%] xs:ml-[5%] sm:mr-[5%] sm:ml-[5%] md:mr-[5%] xxs:w-[90%] xs:w-[90%] sm:w-[90%] md:w-44 right-0 z-10 mt-2 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"menu-button\" tabIndex=\"-1\">\n                            <div className=\"relative rounded-md\" role=\"none\">\n                                {regionValues.map((each, idx) => {\n                                    return (\n                                        <li key={idx} onClick={() => {\n                                            setCurrRegionLabel(each.label);\n                                            setCurrRegion(each.value);\n                                            getCountriesByRegion(each.value);\n                                            }} className=\"dropdown_li text-white dark:bg-white dark:text-black block px-4 py-2 text-sm\" role=\"menuitem\" tabIndex=\"-1\" id=\"menu-item-0\">{each.label}    \n                                        </li>\n                                    )\n                                })}\n                            \n                            </div>\n                        </div> : \"\"}\n                        \n                    </div>\n                </div>\n                <div className=\"loading_msg text-3xl flex justify-center dark:text-black place-items-center\">\n                    <center>{error}</center>\n                </div>\n            </div>\n        )\n    } \n    /**\n     * skeleton loading - need to let the user know that the data is\n     * on its way, so the user isn't left sitting with an empty screen\n     * wondering what is going on.\n     */\n    else if (!isLoaded) {\n        return (\n            <div data-testid='countries' className=\"global flex flex-col\">\n                <div className=\"loading_msg text-3xl flex justify-center dark:text-black place-items-center\"><center>Loading...</center></div>\n            </div>\n        )\n        \n    } \n    /**\n     * If everything works correctly, then we load the countries.\n     */\n    else {\n        return (\n            <div data-testid='countries' className=\"global flex flex-col\" onClick={() => closeDropDown()}>\n\n                <div className=\"flex flex-row justify-between search_bar_and_filter flex-wrap\">\n                    <div className=\"pt-[50px] sm:inline-block md:inline-block sm:w-full xs:w-full xxs:w-full md:w-[40%] z-1\">\n                        <form onSubmit={(e) => e.preventDefault()}>\n                            <div className=\"relative z-1\">\n                                <span className=\"absolute inset-y-0 left-0 flex items-center pl-2 dark:text-black\">\n                                    <i className=\"fal mt-12 dark:text-black\"><FaSearch/></i>\n                                </span>\n                            </div>\n                            <input placeholder='Search for a country...' onChange={(e) => {\n                                    const val = document.getElementById(\"actual_search_bar\").value;\n                                    setCurrSearchText(val);\n                                    getCountriesBySearch(val);\n                                }} name=\"search\" type=\"text\" id=\"actual_search_bar\" value={currSearchText} className=\"h-12 w-full shadow-xl dark:bg-white dark:text-black dark:placeholder:text-black rounded-sm border-none search_bar_color pl-[30px] focus:text-white dark:focus:text-black\">\n                            </input>\n                        </form>\n                    </div>\n\n                    <div className=\"z-1 xxs:w-full xs:w-full sm:w-full md:w-auto sm:inline-block md:inline-block region_filter\">\n                        <div className=\"flex flex-row justify-between\">\n                            <button onClick={handleDropDown} type=\"button\" className=\"text-white dark:text-black inline-flex xxs:w-full xs:w-full sm:w-full md:w-44 dark:bg-white rounded-sm bg-[hsl(209,23%,22%)] px-4 py-2 text-sm font-medium  shadow-sm  focus:outline-none focus:ring-2 focus:shadow-[0_0_40px_rgba(0,0,0,0.2)]\" id=\"menu-button\" aria-expanded=\"true\" aria-haspopup=\"true\">\n                                {currRegionLabel}\n                                <svg className=\"-mr-1 xxs:ml-auto md:ml-19 h-5 w-5 float-right\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\" aria-hidden=\"true\">\n                                    <path fillRule=\"evenodd\" d=\"M5.23 7.21a.75.75 0 011.06.02L10 11.168l3.71-3.938a.75.75 0 111.08 1.04l-4.25 4.5a.75.75 0 01-1.08 0l-4.25-4.5a.75.75 0 01.02-1.06z\" clipRule=\"evenodd\" />\n                                </svg>\n                            </button>\n                        </div>\n\n\n                        {isOpen ?   <button className=\"absolute xxs:mr-[5%] xxs:ml-[5%] xs:mr-[5%] xs:ml-[5%] sm:mr-[5%] sm:ml-[5%] md:mr-[5%] xxs:w-[90%] xs:w-[90%] sm:w-[90%] md:w-44 right-0 z-10 mt-2 origin-top-right rounded-md bg-white shadow-lg ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"menu-button\" tabIndex=\"-1\">\n                            <div className=\"relative rounded-md\" role=\"none\">\n                                {regionValues.map((each, idx) => {\n                                    return (\n                                        <li key={idx} onClick={() => {\n                                            setCurrRegionLabel(each.label);\n                                            setCurrRegion(each.value);\n                                            getCountriesByRegion(each.value);\n                                            }} className=\"dropdown_li text-white dark:bg-white dark:text-black block px-4 py-2 text-sm\" role=\"menuitem\" tabIndex=\"-1\" id=\"menu-item-0\">{each.label}    \n                                        </li>\n                                    )\n                                })}\n                            \n                            </div>\n                        </button> : \"\"}\n                    </div>\n                </div>\n\n                <div className=\"grid grid-cols-1 md:grid-cols-3 sm:grid-cols-2 lg:grid-cols-4 gap-16 mt-5 justify-center\"> \n                    {allCountries.map((each, idx) => (\n                        <Link to={`/specificCountry/${each.name}`} style={{textDecoration:'none', color:'white'}} key={each.alpha3Code}>\n                            <div className=\"overflow-hidden rounded shadow-xl h-full cursor-pointer hover:scale-105 hover:z-1 duration-300 mb-8 \n                            card_body dark:bg-white\">\n                                <img src={each.flags.png} alt=\"country_image\" className=\"w-full h-40 object-cover\"/>\n                                <div className='pl-4 flex flex-col'>\n                                    <h5 className=\"font-bold mt-4 card_title dark:text-black\">{each.name}</h5>\n                                    <span className=\"block card_stats dark:text-black\">Population: {each.population.toLocaleString()}</span>\n                                    <span className=\"block card_stats dark:text-black\" >Region: {each.region}</span> \n                                    <span className=\"block card_stats dark:text-black\">Capital: {each.capital}</span>\n                                </div>\n\n                            </div>\n                        </Link>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Countries;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}